
plugins {
    id 'org.springframework.boot' version '2.2.0.M6'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'org.asciidoctor.convert' version '1.5.8'
    id 'java'
}

group = 'io.github.nornslab.springcloud.bookshop'

subprojects {

    version = '1.0.0'

    // JVM 版本号要求
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    // java编译的时候缺省状态下会因为中文字符而失败
    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

    configurations {
        developmentOnly
        runtimeClasspath {
            extendsFrom developmentOnly
        }
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
        maven { url "http://maven.aliyun.com/nexus/content/groups/public" }
        maven { url 'https://repo.spring.io/milestone' }
    }

    ext {
        set('snippetsDir', file("build/generated-snippets"))
        set('springCloudVersion', "Greenwich.SR3")
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        compileOnly 'org.projectlombok:lombok'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
        testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    test {
        outputs.dir snippetsDir
        useJUnitPlatform()
    }

    asciidoctor {
        inputs.dir snippetsDir
        dependsOn test
    }
}
